---
- name: Install needed packages
  become: true
  block:
    - name: Ensure necessary packages are installed (curl, git, zsh, tmux)
      ansible.builtin.package:
        name:
          - zsh
          - curl
          - git
          - tmux
        state: present

    - name: Install kitty terminal
      ansible.builtin.package:
        name: kitty
        state: present

    - name: Install FiraCode font
      ansible.builtin.package:
        name: fira-code-fonts
        state: present

    - name: Set tmux as the default shell for the user
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        shell: /usr/bin/tmux
        state: present

- name: Ensure the user exists
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    state: present

- name: Download and install Oh-My-Zsh
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      yes | sh -c "$(curl -fsSL {{ terminal_setup_zsh_install_script }})"
    executable: /bin/bash
  args:
    creates: "/home/{{ ansible_user }}/.oh-my-zsh"
  become: true
  become_user: "{{ ansible_user }}"
  register: ohmyzsh_result
  failed_when: ohmyzsh_result.rc != 0 and ohmyzsh_result.rc != 141


- name: Install zsh-syntax-highlighting plugin
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git:
    repo: "{{ terminal_setup_zsh_syntax_highlighting_repo }}"
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    clone: true
    update: true
    version: master

- name: Install zsh-autosuggestions plugin
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git:
    repo: "{{ terminal_setup_zsh_autosuggestions_repo }}"
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    clone: true
    update: true
    version: master

- name: Install powerlevel10k theme
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git:
    repo: "{{ terminal_setup_powerlevel10k_repo }}"
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/themes/powerlevel10k"
    clone: true
    version: master
    depth: 1  # Use --depth=1 to get a shallow clone
...
